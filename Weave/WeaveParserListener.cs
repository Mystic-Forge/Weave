//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from WeaveParser.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="WeaveParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IWeaveParserListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStart([NotNull] WeaveParser.StartContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStart([NotNull] WeaveParser.StartContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.topLevel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTopLevel([NotNull] WeaveParser.TopLevelContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.topLevel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTopLevel([NotNull] WeaveParser.TopLevelContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.importStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImportStatement([NotNull] WeaveParser.ImportStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.importStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImportStatement([NotNull] WeaveParser.ImportStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.exportStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExportStatement([NotNull] WeaveParser.ExportStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.exportStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExportStatement([NotNull] WeaveParser.ExportStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.event"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEvent([NotNull] WeaveParser.EventContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.event"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEvent([NotNull] WeaveParser.EventContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.listener"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterListener([NotNull] WeaveParser.ListenerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.listener"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitListener([NotNull] WeaveParser.ListenerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.memory"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMemory([NotNull] WeaveParser.MemoryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.memory"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMemory([NotNull] WeaveParser.MemoryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction([NotNull] WeaveParser.FunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction([NotNull] WeaveParser.FunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.self_assertion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelf_assertion([NotNull] WeaveParser.Self_assertionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.self_assertion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelf_assertion([NotNull] WeaveParser.Self_assertionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] WeaveParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] WeaveParser.BlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType([NotNull] WeaveParser.TypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType([NotNull] WeaveParser.TypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.labeled_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLabeled_type([NotNull] WeaveParser.Labeled_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.labeled_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLabeled_type([NotNull] WeaveParser.Labeled_typeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] WeaveParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] WeaveParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.print"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrint([NotNull] WeaveParser.PrintContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.print"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrint([NotNull] WeaveParser.PrintContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.temp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTemp([NotNull] WeaveParser.TempContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.temp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTemp([NotNull] WeaveParser.TempContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignment([NotNull] WeaveParser.AssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignment([NotNull] WeaveParser.AssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.save"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSave([NotNull] WeaveParser.SaveContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.save"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSave([NotNull] WeaveParser.SaveContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.load"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLoad([NotNull] WeaveParser.LoadContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.load"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLoad([NotNull] WeaveParser.LoadContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.while"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhile([NotNull] WeaveParser.WhileContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.while"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhile([NotNull] WeaveParser.WhileContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.for"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFor([NotNull] WeaveParser.ForContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.for"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFor([NotNull] WeaveParser.ForContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.exit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExit([NotNull] WeaveParser.ExitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.exit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExit([NotNull] WeaveParser.ExitContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.return"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturn([NotNull] WeaveParser.ReturnContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.return"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturn([NotNull] WeaveParser.ReturnContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] WeaveParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] WeaveParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.if"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIf([NotNull] WeaveParser.IfContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.if"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIf([NotNull] WeaveParser.IfContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.property_access"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProperty_access([NotNull] WeaveParser.Property_accessContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.property_access"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProperty_access([NotNull] WeaveParser.Property_accessContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.function_call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_call([NotNull] WeaveParser.Function_callContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.function_call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_call([NotNull] WeaveParser.Function_callContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifier([NotNull] WeaveParser.IdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifier([NotNull] WeaveParser.IdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.import_identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImport_identifier([NotNull] WeaveParser.Import_identifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.import_identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImport_identifier([NotNull] WeaveParser.Import_identifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.enum"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnum([NotNull] WeaveParser.EnumContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.enum"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnum([NotNull] WeaveParser.EnumContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteral([NotNull] WeaveParser.LiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteral([NotNull] WeaveParser.LiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterList([NotNull] WeaveParser.ListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitList([NotNull] WeaveParser.ListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.list_initialization"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterList_initialization([NotNull] WeaveParser.List_initializationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.list_initialization"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitList_initialization([NotNull] WeaveParser.List_initializationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.list_prefix_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterList_prefix_function([NotNull] WeaveParser.List_prefix_functionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.list_prefix_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitList_prefix_function([NotNull] WeaveParser.List_prefix_functionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.list_index"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterList_index([NotNull] WeaveParser.List_indexContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.list_index"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitList_index([NotNull] WeaveParser.List_indexContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.list_skip"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterList_skip([NotNull] WeaveParser.List_skipContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.list_skip"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitList_skip([NotNull] WeaveParser.List_skipContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.list_take"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterList_take([NotNull] WeaveParser.List_takeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.list_take"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitList_take([NotNull] WeaveParser.List_takeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.list_where"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterList_where([NotNull] WeaveParser.List_whereContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.list_where"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitList_where([NotNull] WeaveParser.List_whereContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.list_select"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterList_select([NotNull] WeaveParser.List_selectContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.list_select"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitList_select([NotNull] WeaveParser.List_selectContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.list_flattened"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterList_flattened([NotNull] WeaveParser.List_flattenedContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.list_flattened"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitList_flattened([NotNull] WeaveParser.List_flattenedContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.list_all"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterList_all([NotNull] WeaveParser.List_allContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.list_all"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitList_all([NotNull] WeaveParser.List_allContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.list_any"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterList_any([NotNull] WeaveParser.List_anyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.list_any"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitList_any([NotNull] WeaveParser.List_anyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.list_split"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterList_split([NotNull] WeaveParser.List_splitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.list_split"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitList_split([NotNull] WeaveParser.List_splitContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.list_suffix_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterList_suffix_function([NotNull] WeaveParser.List_suffix_functionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.list_suffix_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitList_suffix_function([NotNull] WeaveParser.List_suffix_functionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.list_sorted"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterList_sorted([NotNull] WeaveParser.List_sortedContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.list_sorted"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitList_sorted([NotNull] WeaveParser.List_sortedContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.list_reversed"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterList_reversed([NotNull] WeaveParser.List_reversedContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.list_reversed"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitList_reversed([NotNull] WeaveParser.List_reversedContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.list_unique"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterList_unique([NotNull] WeaveParser.List_uniqueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.list_unique"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitList_unique([NotNull] WeaveParser.List_uniqueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.list_range"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterList_range([NotNull] WeaveParser.List_rangeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.list_range"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitList_range([NotNull] WeaveParser.List_rangeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.list_append"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterList_append([NotNull] WeaveParser.List_appendContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.list_append"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitList_append([NotNull] WeaveParser.List_appendContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.list_prepend"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterList_prepend([NotNull] WeaveParser.List_prependContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.list_prepend"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitList_prepend([NotNull] WeaveParser.List_prependContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.list_insert"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterList_insert([NotNull] WeaveParser.List_insertContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.list_insert"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitList_insert([NotNull] WeaveParser.List_insertContext context);
}
