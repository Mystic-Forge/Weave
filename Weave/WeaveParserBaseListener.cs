//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from WeaveParser.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IWeaveParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class WeaveParserBaseListener : IWeaveParserListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStart([NotNull] WeaveParser.StartContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStart([NotNull] WeaveParser.StartContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.topLevel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTopLevel([NotNull] WeaveParser.TopLevelContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.topLevel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTopLevel([NotNull] WeaveParser.TopLevelContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.importStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImportStatement([NotNull] WeaveParser.ImportStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.importStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImportStatement([NotNull] WeaveParser.ImportStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.exportStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExportStatement([NotNull] WeaveParser.ExportStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.exportStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExportStatement([NotNull] WeaveParser.ExportStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.event"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEvent([NotNull] WeaveParser.EventContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.event"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEvent([NotNull] WeaveParser.EventContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.listener"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterListener([NotNull] WeaveParser.ListenerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.listener"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitListener([NotNull] WeaveParser.ListenerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.memory"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMemory([NotNull] WeaveParser.MemoryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.memory"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMemory([NotNull] WeaveParser.MemoryContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction([NotNull] WeaveParser.FunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction([NotNull] WeaveParser.FunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] WeaveParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] WeaveParser.BlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.labeled_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLabeled_type([NotNull] WeaveParser.Labeled_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.labeled_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLabeled_type([NotNull] WeaveParser.Labeled_typeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] WeaveParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] WeaveParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.print"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrint([NotNull] WeaveParser.PrintContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.print"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrint([NotNull] WeaveParser.PrintContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.temp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTemp([NotNull] WeaveParser.TempContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.temp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTemp([NotNull] WeaveParser.TempContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignment([NotNull] WeaveParser.AssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignment([NotNull] WeaveParser.AssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.save"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSave([NotNull] WeaveParser.SaveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.save"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSave([NotNull] WeaveParser.SaveContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.load"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLoad([NotNull] WeaveParser.LoadContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.load"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLoad([NotNull] WeaveParser.LoadContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.while"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhile([NotNull] WeaveParser.WhileContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.while"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhile([NotNull] WeaveParser.WhileContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.for"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFor([NotNull] WeaveParser.ForContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.for"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFor([NotNull] WeaveParser.ForContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.exit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExit([NotNull] WeaveParser.ExitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.exit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExit([NotNull] WeaveParser.ExitContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.return"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturn([NotNull] WeaveParser.ReturnContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.return"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturn([NotNull] WeaveParser.ReturnContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] WeaveParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] WeaveParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.if"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIf([NotNull] WeaveParser.IfContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.if"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIf([NotNull] WeaveParser.IfContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.property_access"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProperty_access([NotNull] WeaveParser.Property_accessContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.property_access"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProperty_access([NotNull] WeaveParser.Property_accessContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.function_call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_call([NotNull] WeaveParser.Function_callContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.function_call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_call([NotNull] WeaveParser.Function_callContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifier([NotNull] WeaveParser.IdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifier([NotNull] WeaveParser.IdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.import_identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImport_identifier([NotNull] WeaveParser.Import_identifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.import_identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImport_identifier([NotNull] WeaveParser.Import_identifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteral([NotNull] WeaveParser.LiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteral([NotNull] WeaveParser.LiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WeaveParser.list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterList([NotNull] WeaveParser.ListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WeaveParser.list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitList([NotNull] WeaveParser.ListContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
